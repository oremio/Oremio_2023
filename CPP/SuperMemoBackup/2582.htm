<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: all in one, Page: begin/end begin函数返回指向vector中第一个元素的迭代器。例如a是一个非空的vector，则*a.begin()与a[0]的作用相同。 所有的容器都可以视作一个“前闭后开”的结构，end函数返回vector的尾部，即第n 个元素再往后的“边界”。*a.end()与a[n]都是越界访问，其中n = a.size()。 .">
<meta http-equiv="keywords" content="SuperMemo, all in one, begin/end begin函数返回指向vector中第一个元素的迭代器。例如a是一个非空的vector，则*a.begin()与a[0]的作用相同。 所有的容器都可以视作一个“前闭后开”的结构，end函数返回vector的尾部，即第n 个元素再往后的“边界”。*a.end()与a[n]都是越界访问，其中n = a.size()。 .">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>all in one: begin/end begin函数返回指向vector中第一 ... (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">all in one: begin/end begin函数返回指向vector中第一 ... </font></b><br>(1 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="3365.htm"> - Next</a> - <a href="2578.htm">Previous</a> - <a href="2576.htm">Parent</a> - <a href="3365.htm">Next sibling</a> - <a href="2578.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">C++</a></li>
<ul>
<li><a href="2547.htm">基础</a></li>
<ul>
<li><a href="2576.htm">vector&array</a></li>
<ul>
<li>This page: begin/end begin函数返回指向vector中第一个元素的迭代器。例如a是一个非空的vector，则*a.begin()与a[0]的作用相同。 所有的容器都可以视作一个“前闭后开”的结构，end函数返回vector的尾部，即第n 个元素再往后的“边界”。*a.end()与a[n]都是越界访问，其中n = a.size()。 .</li>
<ol>
<li>1.5 begin/end begin函数返回指向vector中第一个元素的迭代器。例如a是一个非空的vector，则*a.begin()与a[0]的作用相同。  所有的容器都可以视作一个“前闭后开”的结构，end函数返回vector的尾部，即第n 个元素再往后的“边界”。*a.end()与a[n]都是越界访问，其中n = a.size()。 . (see <a href="#2583">below)</a>
</ol>
</ul>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<div align="center">
<center>
<table border="4" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFFF00" bordercolor="#FF0000">
<tr>
<td>
<b>Subject: Topic #2,582: begin/end begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290; &#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290; .</b><p>
</td>
</tr>
<tr>
<td bordercolor="#FFCC00">
1.5 begin/end<BR>begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290; 
<P></P>
<P>&#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290;</P>
<P>&#19979;&#38754;&#20004;&#20221;&#20195;&#30721;&#37117;&#36941;&#21382;&#20102;vector&lt;int&gt; a&#65292;&#24182;&#36755;&#20986;&#23427;&#30340;&#25152;&#26377;&#20803;&#32032;&#12290;</P>
<P>for (int i = 0; i &lt; a.size(); i ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; a[i] &lt;&lt; endl;</P>
<P>for (<SPAN class=clozed>vector&lt;int&gt;::iterator it = a.begin(); </SPAN>it != a.end(); it ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; *it &lt;&lt; endl;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="2583">Item #2,583: 1.5 begin/end begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290;  &#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290; .</a></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
begin/end<BR>begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290; 
<P></P>
<P>&#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290;</P>
<P>&#19979;&#38754;&#20004;&#20221;&#20195;&#30721;&#37117;&#36941;&#21382;&#20102;vector&lt;int&gt; a&#65292;&#24182;&#36755;&#20986;&#23427;&#30340;&#25152;&#26377;&#20803;&#32032;&#12290;</P>
<P>for (int i = 0; i &lt; a.size(); i ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; a[i] &lt;&lt; endl;</P>
<P>for (<SPAN class=cloze>[...]</SPAN>it != a.end(); it ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; *it &lt;&lt; endl;
</td>
</tr>
<tr>
<td bordercolor="#0066FF" bgcolor="#D0E8FF"> 
vector&lt;int&gt;::iterator it = a.begin();
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: sm18-lazy-package</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 4/27/2024 6:25:45 PM<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
