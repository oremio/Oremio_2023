<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: all in one, Page: 基础">
<meta http-equiv="keywords" content="SuperMemo, all in one, 基础">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>all in one: 基础 (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">all in one: 基础 </font></b><br>(91 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="1671.htm"> - Next</a> - <a href="index.htm">Parent</a> - <a href="2549.htm">Next sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">C++</a></li>
<ul>
<li>This page: 基础</li>
<ol>
<li><a href="1671.htm">基础中的基础</a> (16 elements)
<li><a href="2673.htm">字符串相关库函数&string</a> (20 elements)
<li><a href="2576.htm">vector&array</a> (7 elements)
<li><a href="2581.htm">queue&stack&deque</a> (10 elements)
<li><a href="2589.htm">set&map&unordered_set</a> (19 elements)
<li><a href="2628.htm">常用库函数</a> (13 elements)
</ol>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<P align="center"><b><a href="1671.htm">Topic #1,671: &#22522;&#30784;&#20013;&#30340;&#22522;&#30784;</a></b> <font size="2">(16 elements)</font></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">

</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2673.htm">Topic #2,673: &#23383;&#31526;&#20018;&#30456;&#20851;&#24211;&#20989;&#25968;&string</a></b> <font size="2">(20 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">

</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2576.htm">Topic #2,576: vector&array</a></b> <font size="2">(7 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
1. #include &lt;vector&gt;<BR>vector&#26159;&#21464;&#38271;&#25968;&#32452;&#65292;&#25903;&#25345;&#38543;&#26426;&#35775;&#38382;&#65292;&#19981;&#25903;&#25345;&#22312;&#20219;&#24847;&#20301;&#32622; O(1)&#25554;&#20837;&#12290;&#20026;&#20102;&#20445;&#35777;&#25928;&#29575;&#65292;&#20803;&#32032;&#30340;&#22686;&#21024;&#19968;&#33324;&#24212;&#35813;&#22312;&#26411;&#23614;&#36827;&#34892;&#12290; 
<P></P>
<P>1.1 &#22768;&#26126;<BR>#include &lt;vector&gt;&nbsp;&nbsp; // &#22836;&#25991;&#20214;<BR>vector&lt;int&gt; a;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#30456;&#24403;&#20110;&#19968;&#20010;&#38271;&#24230;&#21160;&#24577;&#21464;&#21270;&#30340;int&#25968;&#32452;<BR>vector&lt;int&gt; b[233]; // &#30456;&#24403;&#20110;&#31532;&#19968;&#32500;&#38271;233&#65292;&#31532;&#20108;&#20301;&#38271;&#24230;&#21160;&#24577;&#21464;&#21270;&#30340;int&#25968;&#32452;<BR>struct rec{&#8230;};<BR>vector&lt;rec&gt; c;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#33258;&#23450;&#20041;&#30340;&#32467;&#26500;&#20307;&#31867;&#22411;&#20063;&#21487;&#20197;&#20445;&#23384;&#22312;vector&#20013;</P>
<P>1.2 size/empty<BR>size&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23454;&#38469;&#38271;&#24230;&#65288;&#21253;&#21547;&#30340;&#20803;&#32032;&#20010;&#25968;&#65289;&#65292;empty&#20989;&#25968;&#36820;&#22238;&#19968;&#20010;bool&#31867;&#22411;&#65292;&#34920;&#26126;vector&#26159;&#21542;&#20026;&#31354;&#12290;&#20108;&#32773;&#30340;&#26102;&#38388;&#22797;&#26434;&#24230;&#37117;&#26159; O(1)&#12290;&#25152;&#26377;&#30340;STL&#23481;&#22120;&#37117;&#25903;&#25345;&#36825;&#20004;&#20010;&#26041;&#27861;&#65292;&#21547;&#20041;&#20063;&#30456;&#21516;&#65292;&#20043;&#21518;&#25105;&#20204;&#23601;&#19981;&#20877;&#37325;&#22797;&#32473;&#20986;&#12290;</P>
<P>1.3 clear<BR>clear&#20989;&#25968;&#25226;vector&#28165;&#31354;&#12290;</P>
<P>1.4 &#36845;&#20195;&#22120;<BR><SPAN class=extract>&#36845;&#20195;&#22120;&#23601;&#20687;STL&#23481;&#22120;&#30340;&#8220;&#25351;&#38024;&#8221;&#65292;&#21487;&#20197;&#29992;<SPAN class=clozed>&#26143;&#21495;*&#25805;&#20316;&#31526;</SPAN>&#35299;&#38500;&#24341;&#29992;&#12290;</SPAN><SPAN class=extract></P>
<P>&#19968;&#20010;&#20445;&#23384;int&#30340;vector&#30340;&#36845;&#20195;&#22120;&#22768;&#26126;&#26041;&#27861;&#20026;&#65306;</P>
<P>vector&lt;int&gt;::iterator it;<BR>vector&#30340;&#36845;&#20195;&#22120;&#26159;&#8220;&#38543;&#26426;&#35775;&#38382;&#36845;&#20195;&#22120;&#8221;&#65292;&#21487;&#20197;&#25226;vector&#30340;&#36845;&#20195;&#22120;&#19982;&#19968;&#20010;&#25972;&#25968;&#30456;&#21152;&#20943;&#65292;&#20854;&#34892;&#20026;&#21644;&#25351;&#38024;&#30340;&#31227;&#21160;&#31867;&#20284;&#12290;&#21487;&#20197;&#25226;vector&#30340;&#20004;&#20010;&#36845;&#20195;&#22120;&#30456;&#20943;&#65292;&#20854;&#32467;&#26524;&#20063;&#21644;&#25351;&#38024;&#30456;&#20943;&#31867;&#20284;&#65292;&#24471;&#21040;&#20004;&#20010;&#36845;&#20195;&#22120;&#23545;&#24212;&#19979;&#26631;&#20043;&#38388;&#30340;&#36317;&#31163;&#12290;</P>
<P></SPAN><SPAN class=extract>&nbsp;</P>
<P>1.5 begin/end<BR>begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290;</P>
<P>&#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290;</P>
<P>&#19979;&#38754;&#20004;&#20221;&#20195;&#30721;&#37117;&#36941;&#21382;&#20102;vector&lt;int&gt; a&#65292;&#24182;&#36755;&#20986;&#23427;&#30340;&#25152;&#26377;&#20803;&#32032;&#12290;</P>
<P>for (int i = 0; i &lt; a.size(); i ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; a[i] &lt;&lt; endl;</P>
<P>for (vector&lt;int&gt;::iterator it = a.begin(); it != a.end(); it ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; *it &lt;&lt; endl;</P>
<P></SPAN>1.6 front/back<BR>front&#20989;&#25968;&#36820;&#22238;vector&#30340;&#31532;&#19968;&#20010;&#20803;&#32032;&#65292;&#31561;&#20215;&#20110;*a.begin()&#21644;a[0]&#12290;<BR>back&#20989;&#25968;&#36820;&#22238;vector&#30340;&#26368;&#21518;&#19968;&#20010;&#20803;&#32032;&#65292;&#31561;&#20215;&#20110;*--a.end()&#21644;a[a.size() &#8211; 1]&#12290;</P>
<P>1.7 push_back()&#21644;pop_back()<BR>a.push_back(x)&#25226;&#20803;&#32032;x&#25554;&#20837;&#21040;vector a&#30340;&#23614;&#37096;&#12290;<BR>b.pop_back()&#21024;&#38500;vector a&#30340;&#26368;&#21518;&#19968;&#20010;&#20803;&#32032;&#12290;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2581.htm">Topic #2,581: queue&stack&deque</a></b> <font size="2">(10 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
2. #include &lt;queue&gt;<BR>&#22836;&#25991;&#20214;queue&#20027;&#35201;&#21253;&#25324;&#24490;&#29615;&#38431;&#21015;queue&#21644;&#20248;&#20808;&#38431;&#21015;priority_queue&#20004;&#20010;&#23481;&#22120;&#12290; 
<P></P>
<P>2.1 &#22768;&#26126;<BR>queue&lt;int&gt; q;<BR>struct rec{&#8230;}; queue&lt;rec&gt; q;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; //&#32467;&#26500;&#20307;rec&#20013;&#24517;&#39035;&#23450;&#20041;&#23567;&#20110;&#21495;<BR><SPAN class=extract>priority_queue&lt;int&gt; q;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#22823;&#26681;&#22534;<BR>priority_queue&lt;int, vector&lt;int&gt;, greater&lt;int&gt;&gt; q;&nbsp;&nbsp; // &#23567;&#26681;&#22534;<BR>priority_queue&lt;pair&lt;int, int&gt;&gt;q;</SPAN></P>
<P>2.2 &#24490;&#29615;&#38431;&#21015;queue<BR>push&nbsp;&nbsp;&nbsp; // &#20174;&#38431;&#23614;&#25554;&#20837;<BR>pop&nbsp;&nbsp;&nbsp;&nbsp; // &#20174;&#38431;&#22836;&#24377;&#20986;<BR>front&nbsp;&nbsp; // &#36820;&#22238;&#38431;&#22836;&#20803;&#32032;<BR>back&nbsp;&nbsp;&nbsp; // &#36820;&#22238;&#38431;&#23614;&#20803;&#32032;</P>
<P><SPAN class=extract>2.3 &#20248;&#20808;&#38431;&#21015;priority_queue<BR>push&nbsp;&nbsp;&nbsp; // &#25226;&#20803;&#32032;&#25554;&#20837;&#22534;<BR>pop&nbsp;&nbsp;&nbsp;&nbsp; // &#21024;&#38500;&#22534;&#39030;&#20803;&#32032;<BR>top&nbsp;&nbsp;&nbsp;&nbsp; // &#26597;&#35810;&#22534;&#39030;&#20803;&#32032;&#65288;&#26368;&#22823;&#20540;&#65289;</SPAN></P>
<P><SPAN class=extract></SPAN>3. #include &lt;stack&gt;<BR>&#22836;&#25991;&#20214;stack&#21253;&#21547;&#26632;&#12290;&#22768;&#26126;&#21644;&#21069;&#38754;&#30340;&#23481;&#22120;&#31867;&#20284;&#12290;</P>
<P>push&nbsp;&nbsp;&nbsp; // &#21521;&#26632;&#39030;&#25554;&#20837;</P>
<P>pop&nbsp;&nbsp;&nbsp;&nbsp; // &#24377;&#20986;&#26632;&#39030;&#20803;&#32032;</P>
<P>4. <SPAN class=extract>#include &lt;deque&gt;<BR>&#21452;&#31471;&#38431;&#21015;deque&#26159;&#19968;&#20010;&#25903;&#25345;&#22312;<STRONG>&#20004;&#31471;</STRONG>&#39640;&#25928;&#25554;&#20837;&#25110;&#21024;&#38500;&#20803;&#32032;&#30340;&#36830;&#32493;&#32447;&#24615;&#23384;&#20648;&#31354;&#38388;&#12290;&#23427;&#23601;&#20687;&#26159;vector&#21644;queue&#30340;&#32467;&#21512;&#12290;&#19982;vector&#30456;&#27604;&#65292;deque&#22312;&#22836;&#37096;&#22686;&#21024;&#20803;&#32032;&#20165;&#38656;&#35201; O(1) &#30340;&#26102;&#38388;&#65307;&#19982;queue&#30456;&#27604;&#65292;deque&#20687;&#25968;&#32452;&#19968;&#26679;&#25903;&#25345;&#38543;&#26426;&#35775;&#38382;&#12290;</SPAN></P>
<P>[]&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#38543;&#26426;&#35775;&#38382;<BR>begin/end&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#36820;&#22238;deque&#30340;&#22836;/&#23614;&#36845;&#20195;&#22120;<BR>front/back&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#38431;&#22836;/&#38431;&#23614;&#20803;&#32032;<BR>push_back&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#20174;&#38431;&#23614;&#20837;&#38431;<BR>push_front&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#20174;&#38431;&#22836;&#20837;&#38431;<BR>pop_back&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#20174;&#38431;&#23614;&#20986;&#38431;<BR>pop_front&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#20174;&#38431;&#22836;&#20986;&#38431;<BR>clear&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#28165;&#31354;&#38431;&#21015;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2589.htm">Topic #2,589: set&map&unordered_set</a></b> <font size="2">(19 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
5. <SPAN class=extract>#include &lt;set&gt;<BR>&#22836;&#25991;&#20214;set&#20027;&#35201;&#21253;&#25324;set&#21644;multiset&#20004;&#20010;&#23481;&#22120;&#65292;&#20998;&#21035;&#26159;&#8220;&#26377;&#24207;&#38598;&#21512;&#8221;&#21644;&#8220;&#26377;&#24207;&#22810;&#37325;&#38598;&#21512;&#8221;&#65292;&#21363;&#21069;&#32773;&#30340;&#20803;&#32032;&#19981;&#33021;&#37325;&#22797;&#65292;&#32780;&#21518;&#32773;&#21487;&#20197;&#21253;&#21547;&#33509;&#24178;&#20010;&#30456;&#31561;&#30340;&#20803;&#32032;&#12290;set&#21644;multiset&#30340;&#20869;&#37096;&#23454;&#29616;&#26159;&#19968;&#26869;&#32418;&#40657;&#26641;&#65292;&#23427;&#20204;&#25903;&#25345;&#30340;&#20989;&#25968;&#22522;&#26412;&#30456;&#21516;&#12290;</SPAN> 
<P></P>
<P>5.1 &#22768;&#26126;<BR>set&lt;int&gt; s;<BR>struct rec{&#8230;}; set&lt;rec&gt; s;&nbsp; // &#32467;&#26500;&#20307;rec&#20013;&#24517;&#39035;&#23450;&#20041;&#23567;&#20110;&#21495;<BR>multiset&lt;double&gt; s;<BR>5.2 size/empty/clear<BR>&#19982;vector&#31867;&#20284;</P>
<P>5.3 &#36845;&#20195;&#22120;<BR><SPAN class=extract></P>
<P>set&#21644;multiset&#30340;&#36845;&#20195;&#22120;&#31216;&#20026;&#8220;&#21452;&#21521;&#35775;&#38382;&#36845;&#20195;&#22120;&#8221;&#65292;&#19981;&#25903;&#25345;&#8220;&#38543;&#26426;&#35775;&#38382;&#8221;&#65292;&#25903;&#25345;&#26143;&#21495;*&#35299;&#38500;&#24341;&#29992;&#65292;&#20165;&#25903;&#25345;++&#21644;--&#20004;&#20010;&#19982;&#31639;&#26415;&#30456;&#20851;&#30340;&#25805;&#20316;&#12290;</P>
<P>&#35774;it&#26159;&#19968;&#20010;&#36845;&#20195;&#22120;&#65292;&#20363;&#22914;set&lt;int&gt;::iterator it;</P>
<P>&#33509;&#25226;it ++&#65292;&#21017;it&#20250;&#25351;&#21521;&#8220;&#19979;&#19968;&#20010;&#8221;&#20803;&#32032;&#12290;&#36825;&#37324;&#30340;&#8220;&#19979;&#19968;&#20010;&#8221;&#20803;&#32032;&#26159;&#25351;&#22312;&#20803;&#32032;&#20174;&#23567;&#21040;&#22823;&#25490;&#24207;&#30340;&#32467;&#26524;&#20013;&#65292;&#25490;&#22312;it&#19979;&#19968;&#21517;&#30340;&#20803;&#32032;&#12290;&#21516;&#29702;&#65292;&#33509;&#25226;it --&#65292;&#21017;it&#23558;&#20250;&#25351;&#21521;&#25490;&#22312;&#8220;&#19978;&#19968;&#20010;&#8221;&#30340;&#20803;&#32032;&#12290;</P></SPAN>
<P>5.4 begin/end<BR>&#36820;&#22238;&#38598;&#21512;&#30340;&#39318;&#12289;&#23614;&#36845;&#20195;&#22120;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#22343;&#20026; O(1)</P>
<P>s.begin()&#26159;&#25351;&#21521;&#38598;&#21512;&#20013;&#26368;&#23567;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;</P>
<P>s.end()&#26159;&#25351;&#21521;&#38598;&#21512;&#20013;&#26368;&#22823;&#20803;&#32032;&#30340;&#19979;&#19968;&#20010;&#20301;&#32622;&#30340;&#36845;&#20195;&#22120;&#12290;&#25442;&#35328;&#20043;&#65292;&#23601;&#20687;vector&#19968;&#26679;&#65292;&#26159;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#24418;&#24335;&#12290;&#22240;&#27492;-- s.end()&#26159;&#25351;&#21521;&#38598;&#21512;&#20013;&#26368;&#22823;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;</P>
<P>5.5 insert<BR>s.insert(x)&#25226;&#19968;&#20010;&#20803;&#32032;x&#25554;&#20837;&#21040;&#38598;&#21512;s&#20013;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(logn)<BR>&#22312;set&#20013;&#65292;&#33509;&#20803;&#32032;&#24050;&#23384;&#22312;&#65292;&#21017;&#19981;&#20250;&#37325;&#22797;&#25554;&#20837;&#35813;&#20803;&#32032;&#65292;&#23545;&#38598;&#21512;&#30340;&#29366;&#24577;&#26080;&#24433;&#21709;&#12290;</P>
<P>5.6 <SPAN class=extract>find<BR>s.find(x)&#22312;&#38598;&#21512;s&#20013;&#26597;&#25214;&#31561;&#20110;x&#30340;&#20803;&#32032;&#65292;&#24182;&#36820;&#22238;&#25351;&#21521;&#35813;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#33509;&#19981;&#23384;&#22312;&#65292;&#21017;&#36820;&#22238;s.end()&#12290;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(logn)<BR></SPAN></P>
<P>5.7 <SPAN class=extract></P>
<P>lower_bound/upper_bound</P>
<P>&#36825;&#20004;&#20010;&#20989;&#25968;&#30340;&#29992;&#27861;&#19982;find&#31867;&#20284;&#65292;&#20294;&#26597;&#25214;&#30340;&#26465;&#20214;&#30053;&#26377;&#19981;&#21516;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(logn)</P>
<P>s.lower_bound(x)&#26597;&#25214;&#22823;&#20110;&#31561;&#20110;x&#30340;&#20803;&#32032;&#20013;&#26368;&#23567;&#30340;&#19968;&#20010;&#65292;&#24182;&#36820;&#22238;&#25351;&#21521;&#35813;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;</P>
<P>s.upper_bound(x)&#26597;&#25214;&#22823;&#20110;x&#30340;&#20803;&#32032;&#20013;&#26368;&#23567;&#30340;&#19968;&#20010;&#65292;&#24182;&#36820;&#22238;&#25351;&#21521;&#35813;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;</P></SPAN>
<P>5.8 <SPAN class=extract></P>
<P>erase<BR>&#35774;it&#26159;&#19968;&#20010;&#36845;&#20195;&#22120;&#65292;s.erase(it)&#20174;s&#20013;&#21024;&#38500;&#36845;&#20195;&#22120;it&#25351;&#21521;&#30340;&#20803;&#32032;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(logn)<BR></P>
<P>&#35774;x&#26159;&#19968;&#20010;&#20803;&#32032;&#65292;s.erase(x)&#20174;s&#20013;&#21024;&#38500;&#25152;&#26377;&#31561;&#20110;x&#30340;&#20803;&#32032;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(k+logn)<BR>&#20854;&#20013; k&#26159;&#34987;&#21024;&#38500;&#30340;&#20803;&#32032;&#20010;&#25968;&#12290;</P></SPAN>
<P>5.9 <SPAN class=extract>count<BR>s.count(x)&#36820;&#22238;&#38598;&#21512;s&#20013;&#31561;&#20110;x&#30340;&#20803;&#32032;&#20010;&#25968;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(k+logn)&#65292;&#20854;&#20013; k&nbsp;&#20026;&#20803;&#32032;x&#30340;&#20010;&#25968;&#12290;</SPAN>6. <SPAN class=extract>#include &lt;map&gt;<BR>map&#23481;&#22120;&#26159;&#19968;&#20010;&#38190;&#20540;&#23545;key-value&#30340;&#26144;&#23556;&#65292;&#20854;&#20869;&#37096;&#23454;&#29616;&#26159;&#19968;&#26869;&#20197;key&#20026;&#20851;&#38190;&#30721;&#30340;&#32418;&#40657;&#26641;&#12290;Map&#30340;key&#21644;value&#21487;&#20197;&#26159;&#20219;&#24847;&#31867;&#22411;&#65292;&#20854;&#20013;key&#24517;&#39035;&#23450;&#20041;&#23567;&#20110;&#21495;&#36816;&#31639;&#31526;&#12290;</SPAN></P>
<P>6.1 &#22768;&#26126;<BR>map&lt;key_type, value_type&gt; name;</P>
<P>//&#20363;&#22914;&#65306;<BR>map&lt;long long, bool&gt; vis;<BR>map&lt;string, int&gt; hash;<BR>map&lt;pair&lt;int, int&gt;, vector&lt;int&gt;&gt; test;</P>
<P>6.2 size/empty/clear/begin/end<BR>&#22343;&#19982;set&#31867;&#20284;&#12290;</P>
<P>6.3 <SPAN class=extract>insert/erase<BR>&#19982;set&#31867;&#20284;&#65292;&#20294;&#20854;&#21442;&#25968;&#22343;&#26159;pair&lt;key_type, value_type&gt;&#12290;</SPAN></P>
<P><SPAN class=extract></SPAN>6.4 find<BR>h.find(x)&#22312;&#21464;&#37327;&#21517;&#20026;h&#30340;map&#20013;&#26597;&#25214;key&#20026;x&#30340;&#20108;&#20803;&#32452;&#12290;</P>
<P>6.5<SPAN class=extract></P>
<P>[]&#25805;&#20316;&#31526;<BR>h[key]&#36820;&#22238;key&#26144;&#23556;&#30340;value&#30340;&#24341;&#29992;&#65292;&#26102;&#38388;&#22797;&#26434;&#24230;&#20026; O(logn)<BR></P>
<P>[]&#25805;&#20316;&#31526;&#26159;map&#26368;&#21560;&#24341;&#20154;&#30340;&#22320;&#26041;&#12290;&#25105;&#20204;&#21487;&#20197;&#24456;&#26041;&#20415;&#22320;&#36890;&#36807;h[key]&#26469;&#24471;&#21040;key&#23545;&#24212;&#30340;value&#65292;&#36824;&#21487;&#20197;&#23545;h[key]&#36827;&#34892;&#36171;&#20540;&#25805;&#20316;&#65292;&#25913;&#21464;key&#23545;&#24212;&#30340;value&#12290;</P></SPAN>
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2628.htm">Topic #2,628: &#24120;&#29992;&#24211;&#20989;&#25968;</a></b> <font size="2">(13 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
2. &#24120;&#29992;&#24211;&#20989;&#25968;<BR>2.1 <SPAN class=extract>
<P></P>
<P>reverse&#32763;&#36716;<BR>&#32763;&#36716;&#19968;&#20010;vector&#65306;</P>
<P>reverse(a.begin(), a.end());</P>
<P></SPAN><BR>&#32763;&#36716;&#19968;&#20010;&#25968;&#32452;&#65292;&#20803;&#32032;&#23384;&#25918;&#22312;&#19979;&#26631;1 ~ n&#65306;</P>
<P>reverse(a + 1, a + n + 1);<BR>2.2 <SPAN class=extract></P>
<P>unique&#21435;&#37325;<BR>&#36820;&#22238;&#21435;&#37325;&#65288;&#21482;&#21435;&#25481;&#30456;&#37051;&#30340;&#30456;&#21516;&#20803;&#32032;&#65289;&#20043;&#21518;&#30340;&#23614;&#36845;&#20195;&#22120;&#65288;&#25110;&#25351;&#38024;&#65289;&#65292;&#20173;&#28982;&#20026;&#21069;&#38381;&#21518;&#24320;&#65292;&#21363;&#36825;&#20010;&#36845;&#20195;&#22120;&#26159;&#21435;&#37325;&#20043;&#21518;&#26411;&#23614;&#20803;&#32032;&#30340;&#19979;&#19968;&#20010;&#20301;&#32622;&#12290;&#35813;&#20989;&#25968;&#24120;&#29992;&#20110;&#31163;&#25955;&#21270;&#65292;&#21033;&#29992;&#36845;&#20195;&#22120;&#65288;&#25110;&#25351;&#38024;&#65289;&#30340;&#20943;&#27861;&#65292;&#21487;&#35745;&#31639;&#20986;&#21435;&#37325;&#21518;&#30340;&#20803;&#32032;&#20010;&#25968;&#12290;</P>
<P>&#25226;&#19968;&#20010;vector&#21435;&#37325;&#65306;</P>
<P>int m = unique(a.begin(), a.end()) &#8211; a.begin();</P>
<P></SPAN><BR>&#25226;&#19968;&#20010;&#25968;&#32452;&#21435;&#37325;&#65292;&#20803;&#32032;&#23384;&#25918;&#22312;&#19979;&#26631;1 ~ n&#65306;</P>
<P>int m = unique(a + 1, a + n + 1) &#8211; (a + 1);<BR>2.3 <SPAN class=extract>random_shuffle&#38543;&#26426;&#25171;&#20081;<BR>&#29992;&#27861;&#19982;reverse&#30456;&#21516;&#12290;</SPAN></P>
<P><SPAN class=extract></SPAN>2.4 <SPAN class=extract>sort<BR>&#23545;&#20004;&#20010;&#36845;&#20195;&#22120;&#65288;&#25110;&#25351;&#38024;&#65289;&#25351;&#23450;&#30340;&#37096;&#20998;&#36827;&#34892;&#24555;&#36895;&#25490;&#24207;&#12290;&#21487;&#20197;&#22312;&#31532;&#19977;&#20010;&#21442;&#25968;&#20256;&#20837;&#23450;&#20041;&#22823;&#23567;&#27604;&#36739;&#30340;&#20989;&#25968;&#65292;&#25110;&#32773;&#37325;&#36733;&#8220;&#23567;&#20110;&#21495;&#8221;&#36816;&#31639;&#31526;&#12290;</SPAN>&#25226;&#19968;&#20010;int&#25968;&#32452;&#65288;&#20803;&#32032;&#23384;&#25918;&#22312;&#19979;&#26631;1 ~ n&#65289;&#20174;&#22823;&#21040;&#23567;&#25490;&#24207;&#65292;&#20256;&#20837;&#27604;&#36739;&#20989;&#25968;&#65306;</P>
<P>int a[MAX_SIZE];<BR>bool cmp(int a, int b)<BR>{<BR>&nbsp;&nbsp;&nbsp; return a &gt; b;<BR>}<BR>sort(a + 1, a + n + 1, cmp);<BR>&#25226;&#33258;&#23450;&#20041;&#30340;&#32467;&#26500;&#20307;vector&#25490;&#24207;&#65292;&#37325;&#36733;&#8220;&#23567;&#20110;&#21495;&#8221;&#36816;&#31639;&#31526;&#65306;</P>
<P>struct Rec<BR>{<BR>&nbsp;&nbsp;&nbsp; int id, x, y;<BR>};</P>
<P>vector&lt;Rec&gt; a;</P>
<P>bool operator &lt;(const Rec &amp;a, const Rec &amp;b)<BR>{<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; return a.x &lt; b.x || a.x == b.x &amp;&amp; a.y &lt; b.y;<BR>}</P>
<P>sort(a.begin(), a.end());<BR>2.5 <SPAN class=extract></P>
<P>lower_bound/upper_bound &#20108;&#20998;<BR>lower_bound&#30340;&#31532;&#19977;&#20010;&#21442;&#25968;&#20256;&#20837;&#19968;&#20010;&#20803;&#32032;x&#65292;&#22312;&#20004;&#20010;&#36845;&#20195;&#22120;&#65288;&#25351;&#38024;&#65289;&#25351;&#23450;&#30340;&#37096;&#20998;&#19978;&#25191;&#34892;&#20108;&#20998;&#26597;&#25214;&#65292;&#36820;&#22238;&#25351;&#21521;&#31532;&#19968;&#20010;&#22823;&#20110;&#31561;&#20110;x&#30340;&#20803;&#32032;&#30340;&#20301;&#32622;&#30340;&#36845;&#20195;&#22120;&#65288;&#25351;&#38024;&#65289;&#12290;</P>
<P>upper_bound&#30340;&#29992;&#27861;&#21644;lower_bound&#22823;&#33268;&#30456;&#21516;&#65292;&#21807;&#19968;&#30340;&#21306;&#21035;&#26159;&#26597;&#25214;&#31532;&#19968;&#20010;&#22823;&#20110;x&#30340;&#20803;&#32032;&#12290;&#24403;&#28982;&#65292;&#20004;&#20010;&#36845;&#20195;&#22120;&#65288;&#25351;&#38024;&#65289;&#25351;&#23450;&#30340;&#37096;&#20998;&#24212;&#35813;&#26159;&#25552;&#21069;&#25490;&#22909;&#24207;&#30340;&#12290;</P>
<P></SPAN>&#22312;&#26377;&#24207;int&#25968;&#32452;&#65288;&#20803;&#32032;&#23384;&#25918;&#22312;&#19979;&#26631;1 ~ n&#65289;&#20013;&#26597;&#25214;&#22823;&#20110;&#31561;&#20110;x&#30340;&#26368;&#23567;&#25972;&#25968;&#30340;&#19979;&#26631;&#65306;</P>
<P>int i = lower_bound(a + 1, a + 1 + n, x) - a;<BR><SPAN class=extract></P>
<P>&#22312;&#26377;&#24207;vector&lt;int&gt;&#20013;&#26597;&#25214;&#23567;&#20110;&#31561;&#20110;x&#30340;&#26368;&#22823;&#25972;&#25968;&#65288;&#20551;&#35774;&#19968;&#23450;&#23384;&#22312;&#65289;&#65306;</P>
<P>int y = *--upper_bound(a.begin(), a.end(), x);</P></SPAN>
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: sm18-lazy-package</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 2024/4/28 16:47:54<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
