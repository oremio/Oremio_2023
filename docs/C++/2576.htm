<html>

<head>
<meta http-equiv="description" content="SuperMemo Collection: all in one, Page: vector&array">
<meta http-equiv="keywords" content="SuperMemo, all in one, vector&array">
<meta name="GENERATOR" content="SuperMemo for Windows (Build 18.05)">
<title>all in one: vector&array (SuperMemo collection)</title>
</head>

<body>

<p align="center"><b><font size="5">all in one: vector&array </font></b><br>(7 elements)</p>
<a name="TopOfPages"> </a>
<b>Contents:</b>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCCFF">
<tr>
<td width="100%">
  <a href="index.htm">Root</a> <a href="2578.htm"> - Next</a> - <a href="3363.htm">Previous</a> - <a href="2547.htm">Parent</a> - <a href="2581.htm">Next sibling</a> - <a href="2673.htm">Previous sibling</a>
<font size="2">
<ul>
<li><a href="index.htm">C++</a></li>
<ul>
<li><a href="2547.htm">基础</a></li>
<ul>
<li>This page: vector&array</li>
<ol>
<li><a href="2578.htm">迭代器就像STL容器的“指针”，可以用星号*操作符解除引用。</a> (1 elements)
<li>一个保存int的vector的迭代器声明方法为： vector<int>::iterator it; vector的迭代器是“随机访问迭代器”，可以把vector的迭代器与一个整数相加减，其行为和指针的移动类似。可以把vector的两个迭代器相减，其结果也和指针相减类似，得到两个迭代器对应下标之间的距离。 (see <a href="#2580">below)</a>
<li><a href="2582.htm">begin/end begin函数返回指向vector中第一个元素的迭代器。例如a是一个非空的vector，则*a.begin()与a[0]的作用相同。 所有的容器都可以视作一个“前闭后开”的结构，end函数返回vector的尾部，即第n 个元素再往后的“边界”。*a.end()与a[n]都是越界访问，其中n = a.size()。 .</a> (1 elements)
<li><a href="3365.htm">C++Style Array 是一个容器类，所以有迭代器（可以认为是一种用于访问成员的高级指针） 可直接赋值 知道自己大小：size(0 能和另一个数组交换内容：swap(0 能以指定值填充自己：f0 取某个位置的元素（做越界检查）：at0</a> (1 elements)
</ol>
</ul>
</ul>
</ul>
</font>
</td>
</tr>
</table>
</center>
</div>

<div align="center">
<center>
<table border="4" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFFF00" bordercolor="#FF0000">
<tr>
<td>
<b>Subject: Topic #2,576: vector&array</b><p>
</td>
</tr>
<tr>
<td bordercolor="#FFCC00">
1. #include &lt;vector&gt;<BR>vector&#26159;&#21464;&#38271;&#25968;&#32452;&#65292;&#25903;&#25345;&#38543;&#26426;&#35775;&#38382;&#65292;&#19981;&#25903;&#25345;&#22312;&#20219;&#24847;&#20301;&#32622; O(1)&#25554;&#20837;&#12290;&#20026;&#20102;&#20445;&#35777;&#25928;&#29575;&#65292;&#20803;&#32032;&#30340;&#22686;&#21024;&#19968;&#33324;&#24212;&#35813;&#22312;&#26411;&#23614;&#36827;&#34892;&#12290; 
<P></P>
<P>1.1 &#22768;&#26126;<BR>#include &lt;vector&gt;&nbsp;&nbsp; // &#22836;&#25991;&#20214;<BR>vector&lt;int&gt; a;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#30456;&#24403;&#20110;&#19968;&#20010;&#38271;&#24230;&#21160;&#24577;&#21464;&#21270;&#30340;int&#25968;&#32452;<BR>vector&lt;int&gt; b[233]; // &#30456;&#24403;&#20110;&#31532;&#19968;&#32500;&#38271;233&#65292;&#31532;&#20108;&#20301;&#38271;&#24230;&#21160;&#24577;&#21464;&#21270;&#30340;int&#25968;&#32452;<BR>struct rec{&#8230;};<BR>vector&lt;rec&gt; c;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // &#33258;&#23450;&#20041;&#30340;&#32467;&#26500;&#20307;&#31867;&#22411;&#20063;&#21487;&#20197;&#20445;&#23384;&#22312;vector&#20013;</P>
<P>1.2 size/empty<BR>size&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23454;&#38469;&#38271;&#24230;&#65288;&#21253;&#21547;&#30340;&#20803;&#32032;&#20010;&#25968;&#65289;&#65292;empty&#20989;&#25968;&#36820;&#22238;&#19968;&#20010;bool&#31867;&#22411;&#65292;&#34920;&#26126;vector&#26159;&#21542;&#20026;&#31354;&#12290;&#20108;&#32773;&#30340;&#26102;&#38388;&#22797;&#26434;&#24230;&#37117;&#26159; O(1)&#12290;&#25152;&#26377;&#30340;STL&#23481;&#22120;&#37117;&#25903;&#25345;&#36825;&#20004;&#20010;&#26041;&#27861;&#65292;&#21547;&#20041;&#20063;&#30456;&#21516;&#65292;&#20043;&#21518;&#25105;&#20204;&#23601;&#19981;&#20877;&#37325;&#22797;&#32473;&#20986;&#12290;</P>
<P>1.3 clear<BR>clear&#20989;&#25968;&#25226;vector&#28165;&#31354;&#12290;</P>
<P>1.4 &#36845;&#20195;&#22120;<BR><SPAN class=extract>&#36845;&#20195;&#22120;&#23601;&#20687;STL&#23481;&#22120;&#30340;&#8220;&#25351;&#38024;&#8221;&#65292;&#21487;&#20197;&#29992;<SPAN class=clozed>&#26143;&#21495;*&#25805;&#20316;&#31526;</SPAN>&#35299;&#38500;&#24341;&#29992;&#12290;</SPAN><SPAN class=extract></P>
<P>&#19968;&#20010;&#20445;&#23384;int&#30340;vector&#30340;&#36845;&#20195;&#22120;&#22768;&#26126;&#26041;&#27861;&#20026;&#65306;</P>
<P>vector&lt;int&gt;::iterator it;<BR>vector&#30340;&#36845;&#20195;&#22120;&#26159;&#8220;&#38543;&#26426;&#35775;&#38382;&#36845;&#20195;&#22120;&#8221;&#65292;&#21487;&#20197;&#25226;vector&#30340;&#36845;&#20195;&#22120;&#19982;&#19968;&#20010;&#25972;&#25968;&#30456;&#21152;&#20943;&#65292;&#20854;&#34892;&#20026;&#21644;&#25351;&#38024;&#30340;&#31227;&#21160;&#31867;&#20284;&#12290;&#21487;&#20197;&#25226;vector&#30340;&#20004;&#20010;&#36845;&#20195;&#22120;&#30456;&#20943;&#65292;&#20854;&#32467;&#26524;&#20063;&#21644;&#25351;&#38024;&#30456;&#20943;&#31867;&#20284;&#65292;&#24471;&#21040;&#20004;&#20010;&#36845;&#20195;&#22120;&#23545;&#24212;&#19979;&#26631;&#20043;&#38388;&#30340;&#36317;&#31163;&#12290;</P>
<P></SPAN><SPAN class=extract>&nbsp;</P>
<P>1.5 begin/end<BR>begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290;</P>
<P>&#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290;</P>
<P>&#19979;&#38754;&#20004;&#20221;&#20195;&#30721;&#37117;&#36941;&#21382;&#20102;vector&lt;int&gt; a&#65292;&#24182;&#36755;&#20986;&#23427;&#30340;&#25152;&#26377;&#20803;&#32032;&#12290;</P>
<P>for (int i = 0; i &lt; a.size(); i ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; a[i] &lt;&lt; endl;</P>
<P>for (vector&lt;int&gt;::iterator it = a.begin(); it != a.end(); it ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; *it &lt;&lt; endl;</P>
<P></SPAN>1.6 front/back<BR>front&#20989;&#25968;&#36820;&#22238;vector&#30340;&#31532;&#19968;&#20010;&#20803;&#32032;&#65292;&#31561;&#20215;&#20110;*a.begin()&#21644;a[0]&#12290;<BR>back&#20989;&#25968;&#36820;&#22238;vector&#30340;&#26368;&#21518;&#19968;&#20010;&#20803;&#32032;&#65292;&#31561;&#20215;&#20110;*--a.end()&#21644;a[a.size() &#8211; 1]&#12290;</P>
<P>1.7 push_back()&#21644;pop_back()<BR>a.push_back(x)&#25226;&#20803;&#32032;x&#25554;&#20837;&#21040;vector a&#30340;&#23614;&#37096;&#12290;<BR>b.pop_back()&#21024;&#38500;vector a&#30340;&#26368;&#21518;&#19968;&#20010;&#20803;&#32032;&#12290;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2578.htm">Topic #2,578: &#36845;&#20195;&#22120;&#23601;&#20687;STL&#23481;&#22120;&#30340;&#8220;&#25351;&#38024;&#8221;&#65292;&#21487;&#20197;&#29992;&#26143;&#21495;*&#25805;&#20316;&#31526;&#35299;&#38500;&#24341;&#29992;&#12290;</a></b> <font size="2">(1 elements)</font></P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
&#36845;&#20195;&#22120;&#23601;&#20687;STL&#23481;&#22120;&#30340;&#8220;&#25351;&#38024;&#8221;&#65292;&#21487;&#20197;&#29992;<SPAN class=clozed><SPAN class=clozed><SPAN class=clozed>&#26143;&#21495;*&#25805;&#20316;&#31526;</SPAN></SPAN></SPAN>&#35299;&#38500;&#24341;&#29992;&#12290;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a name="2580">Topic #2,580: &#19968;&#20010;&#20445;&#23384;int&#30340;vector&#30340;&#36845;&#20195;&#22120;&#22768;&#26126;&#26041;&#27861;&#20026;&#65306; vector<int>::iterator it; vector&#30340;&#36845;&#20195;&#22120;&#26159;&#8220;&#38543;&#26426;&#35775;&#38382;&#36845;&#20195;&#22120;&#8221;&#65292;&#21487;&#20197;&#25226;vector&#30340;&#36845;&#20195;&#22120;&#19982;&#19968;&#20010;&#25972;&#25968;&#30456;&#21152;&#20943;&#65292;&#20854;&#34892;&#20026;&#21644;&#25351;&#38024;&#30340;&#31227;&#21160;&#31867;&#20284;&#12290;&#21487;&#20197;&#25226;vector&#30340;&#20004;&#20010;&#36845;&#20195;&#22120;&#30456;&#20943;&#65292;&#20854;&#32467;&#26524;&#20063;&#21644;&#25351;&#38024;&#30456;&#20943;&#31867;&#20284;&#65292;&#24471;&#21040;&#20004;&#20010;&#36845;&#20195;&#22120;&#23545;&#24212;&#19979;&#26631;&#20043;&#38388;&#30340;&#36317;&#31163;&#12290;</a> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
&#19968;&#20010;&#20445;&#23384;int&#30340;vector&#30340;&#36845;&#20195;&#22120;&#22768;&#26126;&#26041;&#27861;&#20026;&#65306;
<P></P>
<P>vector&lt;int&gt;::iterator it;<BR>vector&#30340;&#36845;&#20195;&#22120;&#26159;&#8220;<STRONG>&#38543;&#26426;&#35775;&#38382;&#36845;&#20195;&#22120;</STRONG>&#8221;&#65292;&#21487;&#20197;&#25226;vector&#30340;&#36845;&#20195;&#22120;&#19982;<STRONG>&#19968;&#20010;&#25972;&#25968;</STRONG>&#30456;&#21152;&#20943;&#65292;&#20854;&#34892;&#20026;&#21644;&#25351;&#38024;&#30340;&#31227;&#21160;&#31867;&#20284;&#12290;&#21487;&#20197;&#25226;vector&#30340;&#20004;&#20010;&#36845;&#20195;&#22120;&#30456;&#20943;&#65292;&#20854;&#32467;&#26524;&#20063;&#21644;&#25351;&#38024;&#30456;&#20943;&#31867;&#20284;&#65292;&#24471;&#21040;&#20004;&#20010;&#36845;&#20195;&#22120;&#23545;&#24212;&#19979;&#26631;&#20043;&#38388;&#30340;&#36317;&#31163;&#12290;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="2582.htm">Topic #2,582: begin/end begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290; &#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290; .</a></b> <font size="2">(1 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
1.5 begin/end<BR>begin&#20989;&#25968;&#36820;&#22238;&#25351;&#21521;vector&#20013;&#31532;&#19968;&#20010;&#20803;&#32032;&#30340;&#36845;&#20195;&#22120;&#12290;&#20363;&#22914;a&#26159;&#19968;&#20010;&#38750;&#31354;&#30340;vector&#65292;&#21017;*a.begin()&#19982;a[0]&#30340;&#20316;&#29992;&#30456;&#21516;&#12290; 
<P></P>
<P>&#25152;&#26377;&#30340;&#23481;&#22120;&#37117;&#21487;&#20197;&#35270;&#20316;&#19968;&#20010;&#8220;&#21069;&#38381;&#21518;&#24320;&#8221;&#30340;&#32467;&#26500;&#65292;end&#20989;&#25968;&#36820;&#22238;vector&#30340;&#23614;&#37096;&#65292;&#21363;&#31532;n &#20010;&#20803;&#32032;&#20877;&#24448;&#21518;&#30340;&#8220;&#36793;&#30028;&#8221;&#12290;*a.end()&#19982;a[n]&#37117;&#26159;&#36234;&#30028;&#35775;&#38382;&#65292;&#20854;&#20013;n = a.size()&#12290;</P>
<P>&#19979;&#38754;&#20004;&#20221;&#20195;&#30721;&#37117;&#36941;&#21382;&#20102;vector&lt;int&gt; a&#65292;&#24182;&#36755;&#20986;&#23427;&#30340;&#25152;&#26377;&#20803;&#32032;&#12290;</P>
<P>for (int i = 0; i &lt; a.size(); i ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; a[i] &lt;&lt; endl;</P>
<P>for (<SPAN class=clozed>vector&lt;int&gt;::iterator it = a.begin(); </SPAN>it != a.end(); it ++)<BR>&nbsp;&nbsp;&nbsp; cout &lt;&lt; *it &lt;&lt; endl;
</td>
</tr>
</table>
</center>
</div>
<hr>
<P align="center"><b><a href="3365.htm">Topic #3,365: C++Style Array &#26159;&#19968;&#20010;&#23481;&#22120;&#31867;&#65292;&#25152;&#20197;&#26377;&#36845;&#20195;&#22120;&#65288;&#21487;&#20197;&#35748;&#20026;&#26159;&#19968;&#31181;&#29992;&#20110;&#35775;&#38382;&#25104;&#21592;&#30340;&#39640;&#32423;&#25351;&#38024;&#65289; &#21487;&#30452;&#25509;&#36171;&#20540; &#30693;&#36947;&#33258;&#24049;&#22823;&#23567;&#65306;size(0 &#33021;&#21644;&#21478;&#19968;&#20010;&#25968;&#32452;&#20132;&#25442;&#20869;&#23481;&#65306;swap(0 &#33021;&#20197;&#25351;&#23450;&#20540;&#22635;&#20805;&#33258;&#24049;&#65306;f0 &#21462;&#26576;&#20010;&#20301;&#32622;&#30340;&#20803;&#32032;&#65288;&#20570;&#36234;&#30028;&#26816;&#26597;&#65289;&#65306;at0</a></b> <font size="2">(1 elements)</font> (<a href="#TopOfPages"><font size="1">top</font></a></b>)</P>
<div align="center">
<center>
<table border="1" cellpadding="5" cellspacing="5" width="100%" bgcolor="#99CCFF">
<tr>
<td bordercolor="#0066FF">
C++Style Array</P>
<P>&#26159;&#19968;&#20010;&#23481;&#22120;&#31867;&#65292;&#25152;&#20197;&#26377;&#36845;&#20195;&#22120;&#65288;&#21487;&#20197;&#35748;&#20026;&#26159;&#19968;&#31181;&#29992;&#20110;&#35775;&#38382;&#25104;&#21592;&#30340;&#39640;&#32423;&#25351;&#38024;&#65289; 
<P>&#21487;&#30452;&#25509;&#36171;&#20540; 
<P>&#30693;&#36947;&#33258;&#24049;&#22823;&#23567;&#65306;size() 
<P>&#33021;&#21644;&#21478;&#19968;&#20010;&#25968;&#32452;&#20132;&#25442;&#20869;&#23481;&#65306;<SPAN class=clozed>swap()</SPAN>&#33021;&#20197;&#25351;&#23450;&#20540;&#22635;&#20805;&#33258;&#24049;&#65306;fill() 
<P>&#21462;&#26576;&#20010;&#20301;&#32622;&#30340;&#20803;&#32032;&#65288;&#20570;&#36234;&#30028;&#26816;&#26597;&#65289;&#65306;at()
</td>
</tr>
</table>
</center>
</div>
<hr>
<div align="center">
<center>
<table border="2" cellpadding="5" cellspacing="5" width="100%" bgcolor="#FFCC66">
<tr>
<td width="100%">
<p><b>About using this material:</b></p>
<p>The best way to <b>learn</b> this material is to use <a href="http://super-memory.com/english/smintro.htm">SuperMemo</a> software.<br>
SuperMemo is the world's leader in accelerated learning technologies
 (see: <a href="http://www.super-memory.com">SuperMemo Website</a>)
<p>
No download URL currently available
</td>
</tr>
<tr>
<td width="100%">
<b>Contact data:</b></p>
<p><b>Author: sm18-lazy-package</b><br>
<a href="http://super-memory.com">super-memory.com</a><br>
date: 2024/4/28 16:47:54<br>
Page generated with:<br> SuperMemo 18<br>Build: 18.05 of Oct 29, 2020
</td>
</tr>
<tr>
<td width="100%">
</td>
</tr>
</table>
</center>
</div>
</body>

</html>
